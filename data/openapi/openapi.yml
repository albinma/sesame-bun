openapi: 3.0.3
info:
  title: sesame-bun API
  description: An API for sesame-bun
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Development
  - url: https://unknown.com
    description: Production
paths:
  /auth/begin:
    post:
      summary: Begins the authentication process
      description: Begins the authentication process by providing the public address of the user. System will return a random nonce used for signature validation.
      tags:
        - authentication
      operationId: authentication.Begin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthBeginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthBeginResponse'
        '400':
          $ref: '#/components/responses/400'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'

  /auth/complete:
    post:
      summary: Completes the authentication process
      description: Completes the authentication process by providing the public address of the user and the signed signature using the nonce.
      tags:
        - authentication
      operationId: authentication.Complete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthCompleteRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCompleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /auth/refresh:
    post:
      summary: Gets a new access token using the refresh token
      description: Refreshes the authentication process by providing the refresh token.
      tags:
        - authentication
      operationId: authentication.Refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRefreshRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCompleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '400':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ValidationProblem'
      description: Request cannot be processed due to malformed request syntax
    '401':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authentication failure
    '403':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authorization failure
    '404':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to resource not found
    '422':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was formed correctly but errors ocurred during processing
    '500':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to an internal server error
  schemas:
    Problem:
      description: A Problem Details object (RFC 9457)
      type: object
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          format: uri
          description: URI reference that identifies the problem type
          default: about:blank
        status:
          type: integer
          format: int32
          description: HTTP status code generated by the origin server for this occurrence of the problem
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
        title:
          type: string
          description: A short, human-readable summary of the problem type
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: URI reference that identifies the specific occurrence of the problem
    ValidationProblem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Problem'
      properties:
        errors:
          type: array
          description: A list of validation errors
          items:
            $ref: '#/components/schemas/ValidationError'
      example:
        type: about:blank
        status: 400
        title: One or more validation errors occurred
        errors:
          - name: publicAddress
            reason: Public address is required
          - name: signature
            reason: Signature is required
    ValidationError:
      type: object
      properties:
        name:
          type: string
          description: The name of the field that caused the error
        reason:
          type: string
          description: The reason why the field caused the error
    PublicAddress:
      type: string
      description: The public address of the user
    AuthBeginRequest:
      type: object
      required:
        - publicAddress
      properties:
        publicAddress:
          $ref: '#/components/schemas/PublicAddress'
      example:
        publicAddress: 0xb794f5ea0ba39494ce839613fffba74279579268
    AuthBeginResponse:
      type: object
      required:
        - publicAddress
        - nonce
      properties:
        publicAddress:
          type: string
          $ref: '#/components/schemas/PublicAddress'
        nonce:
          type: string
          description: The nonce used for signature validation
      example:
        publicAddress: 0xb794f5ea0ba39494ce839613fffba74279579268
        nonce: 0x1234567890abcdef
    AuthCompleteRequest:
      type: object
      required:
        - publicAddress
        - signature
      properties:
        publicAddress:
          $ref: '#/components/schemas/PublicAddress'
        signature:
          type: string
          description: The signature signed using the nonce
      example:
        publicAddress: 0xb794f5ea0ba39494ce839613fffba74279579268
        signature: 0x1234567890abcdef0x1234567890abcdef0x1234567890abcdef
    AuthCompleteResponse:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
          description: The access token used for authentication
        refreshToken:
          type: string
          description: The refresh token used for authentication
      example:
        accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        refreshToken: b9fb87f2893d8fdcbf8f65f6c7069485d013808115fbb9159edd247de2551883
    AuthRefreshRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          description: The refresh token used for authentication
      example:
        refreshToken: b9fb87f2893d8fdcbf8f65f6c7069485d013808115fbb9159edd247de2551883
